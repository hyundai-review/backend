name: Deploy to AWS
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/review-backend:latest
          build-args: |
            RDS_URL=${{ secrets.RDS_URL }}
            RDS_USERNAME=${{ secrets.RDS_USERNAME }}
            RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JWT_ACCESS_TOKEN_EXPIRATION=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION }}
            JWT_REFRESH_TOKEN_EXPIRATION=${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION }}
            KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}
            TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}
            TMDB_API_URL=${{ secrets.TMDB_API_URL }}
            KOBIS_API_KEY=${{ secrets.KOBIS_API_KEY }}
            KOBIS_API_URL=${{ secrets.KOBIS_API_URL }}
            AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 최신 이미지 pull
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/review-backend:latest
            
            # 기존 컨테이너 중지 및 삭제
            docker stop backend-container || true
            docker rm backend-container || true
            
            # 새 컨테이너 실행
            docker run -d \
              --name backend-container \
              -p 8080:8080 \
              ${{ secrets.DOCKERHUB_USERNAME }}/review-backend:latest
